// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: chitchat.proto

package chitchat

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageType int32

const (
	MessageType_JOIN  MessageType = 0
	MessageType_LEAVE MessageType = 1
	MessageType_CHAT  MessageType = 2
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "JOIN",
		1: "LEAVE",
		2: "CHAT",
	}
	MessageType_value = map[string]int32{
		"JOIN":  0,
		"LEAVE": 1,
		"CHAT":  2,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_chitchat_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_chitchat_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_chitchat_proto_rawDescGZIP(), []int{0}
}

type ChatMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	LogicalTime   int64                  `protobuf:"varint,3,opt,name=logical_time,json=logicalTime,proto3" json:"logical_time,omitempty"`
	Type          MessageType            `protobuf:"varint,4,opt,name=type,proto3,enum=chitchat.MessageType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	mi := &file_chitchat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chitchat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_chitchat_proto_rawDescGZIP(), []int{0}
}

func (x *ChatMessage) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *ChatMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatMessage) GetLogicalTime() int64 {
	if x != nil {
		return x.LogicalTime
	}
	return 0
}

func (x *ChatMessage) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_JOIN
}

var File_chitchat_proto protoreflect.FileDescriptor

const file_chitchat_proto_rawDesc = "" +
	"\n" +
	"\x0echitchat.proto\x12\bchitchat\"\x92\x01\n" +
	"\vChatMessage\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12!\n" +
	"\flogical_time\x18\x03 \x01(\x03R\vlogicalTime\x12)\n" +
	"\x04type\x18\x04 \x01(\x0e2\x15.chitchat.MessageTypeR\x04type*,\n" +
	"\vMessageType\x12\b\n" +
	"\x04JOIN\x10\x00\x12\t\n" +
	"\x05LEAVE\x10\x01\x12\b\n" +
	"\x04CHAT\x10\x022K\n" +
	"\x0fChitChatService\x128\n" +
	"\x04Chat\x12\x15.chitchat.ChatMessage\x1a\x15.chitchat.ChatMessage(\x010\x01B7Z5github.com/Gustav2620/ChitChat/grpc/chitchat;chitchatb\x06proto3"

var (
	file_chitchat_proto_rawDescOnce sync.Once
	file_chitchat_proto_rawDescData []byte
)

func file_chitchat_proto_rawDescGZIP() []byte {
	file_chitchat_proto_rawDescOnce.Do(func() {
		file_chitchat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chitchat_proto_rawDesc), len(file_chitchat_proto_rawDesc)))
	})
	return file_chitchat_proto_rawDescData
}

var file_chitchat_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_chitchat_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_chitchat_proto_goTypes = []any{
	(MessageType)(0),    // 0: chitchat.MessageType
	(*ChatMessage)(nil), // 1: chitchat.ChatMessage
}
var file_chitchat_proto_depIdxs = []int32{
	0, // 0: chitchat.ChatMessage.type:type_name -> chitchat.MessageType
	1, // 1: chitchat.ChitChatService.Chat:input_type -> chitchat.ChatMessage
	1, // 2: chitchat.ChitChatService.Chat:output_type -> chitchat.ChatMessage
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_chitchat_proto_init() }
func file_chitchat_proto_init() {
	if File_chitchat_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chitchat_proto_rawDesc), len(file_chitchat_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chitchat_proto_goTypes,
		DependencyIndexes: file_chitchat_proto_depIdxs,
		EnumInfos:         file_chitchat_proto_enumTypes,
		MessageInfos:      file_chitchat_proto_msgTypes,
	}.Build()
	File_chitchat_proto = out.File
	file_chitchat_proto_goTypes = nil
	file_chitchat_proto_depIdxs = nil
}
